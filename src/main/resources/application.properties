quarkus.banner.enabled=false
quarkus.ssl.native=true
quarkus.swagger-ui.always-include=true

camel.context.name=serverless-workflow-kogito-demo

telegram.token=<YOUR_TOKEN_HERE>

# kafka setup
kafka.bootstrap.servers=localhost:9092

# kafka - orders
mp.messaging.outgoing.out-neworder.connector=smallrye-kafka
mp.messaging.outgoing.out-neworder.topic=neworder
mp.messaging.outgoing.out-neworder.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.neworder.connector=smallrye-kafka
mp.messaging.incoming.neworder.topic=neworder
mp.messaging.incoming.neworder.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.outgoing.out-approvaldecision.connector=smallrye-kafka
mp.messaging.outgoing.out-approvaldecision.topic=approvaldecision
mp.messaging.outgoing.out-approvaldecision.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.approvaldecision.connector=smallrye-kafka
mp.messaging.incoming.approvaldecision.topic=approvaldecision
mp.messaging.incoming.approvaldecision.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# kafka - kogito runtime
mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer